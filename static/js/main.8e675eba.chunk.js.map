{"version":3,"sources":["components/recipes/recipes.js","components/oneRecipe/oneRecipe.js","components/newRecipe/NewRecipe.js","App.js","reportWebVitals.js","index.js"],"names":["Recipes","props","state","data","fetch","then","response","json","setState","i","this","handeldRecipe","routeChange","className","map","recipe","style","width","src","image","alt","title","ingredients","onClick","showOne","_id","Component","OneRecipe","onSubmit","rec","alert","id","method","headers","body","JSON","stringify","res","catch","err","console","log","editStatus","delete","window","confirm","setTimeout","e","preventDefault","name","defaultValue","onChange","txt","target","value","type","NewRecipe","FormData","append","error","event","files","App","Routing","route","handeledReipeId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e675eba.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Recipes extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch('https://myrecipe-be.herokuapp.com/')\r\n      .then((response) => response.json())\r\n      .then((data) => this.setState({ data }));\r\n  }\r\n\r\n  //Handling onClick of More Details button (passing the recipe ID to App component)\r\n  showOne(i) {\r\n    this.props.handeldRecipe(i);\r\n    this.props.routeChange('one');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex flex-wrap\">\r\n        {this.state.data.map((recipe) => {\r\n          return (\r\n            <div className=\"card m-3\" style={{ width: '18rem' }}>\r\n              <img\r\n                className=\"card-img-top\"\r\n                src={'https://myrecipe-be.herokuapp.com/' + recipe.image}\r\n                alt=\"Card image cap\"\r\n              />\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{recipe.title}</h5>\r\n                <p className=\"card-text\">{recipe.ingredients}</p>\r\n                <p className=\"card-text\">{recipe.recipe}</p>\r\n                <button\r\n                  onClick={() => this.showOne(recipe._id)}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  More Details\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recipes;\r\n","import React, { Component } from 'react';\r\n\r\nclass OneRecipe extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      recipe: [],\r\n      editStatus: false,\r\n      title: '',\r\n      ingredients: '',\r\n      rec: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`https://myrecipe-be.herokuapp.com/recipe/${this.props.id}`)\r\n      .then((response) => response.json())\r\n      .then((recipe) =>\r\n        this.setState({\r\n          recipe,\r\n          title: recipe.title,\r\n          ingredients: recipe.ingredients,\r\n          rec: recipe.recipe,\r\n        })\r\n      );\r\n  }\r\n\r\n  //Handling onclick of submit button of edit form\r\n  onSubmit = () => {\r\n    if (!this.state.title || !this.state.ingredients || !this.state.rec) {\r\n      return alert(\r\n        'You can not submit empty Title, Ingredients and/or Recipe'\r\n      );\r\n    }\r\n    fetch(`https://myrecipe-be.herokuapp.com/edit/${this.props.id}`, {\r\n      method: 'post',\r\n      headers: { 'content-type': 'application/json' },\r\n      body: JSON.stringify({\r\n        title: this.state.title,\r\n        ingredients: this.state.ingredients,\r\n        recipe: this.state.rec,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data._id) {\r\n          this.setState({ recipe: data });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n    this.setState({ editStatus: false });\r\n  };\r\n\r\n  //Handling onClick of delete button\r\n  delete = () => {\r\n    let confirm = window.confirm(\r\n      'Are you sure you want to delete this recipe?'\r\n    );\r\n    if (confirm) {\r\n      fetch(`https://myrecipe-be.herokuapp.com/delete/${this.props.id}`, {\r\n        method: 'delete',\r\n      })\r\n        .then(\r\n          setTimeout(() => {\r\n            this.props.routeChange('home');\r\n          }, 1000)\r\n        )\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { recipe } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"card mb-3\">\r\n          <img\r\n            className=\"card-img-top\"\r\n            src={'https://myrecipe-be.herokuapp.com/' + recipe.image}\r\n            alt=\"Card cap\"\r\n          />\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{recipe.title}</h5>\r\n            <p className=\"card-text\">{recipe.recipe}</p>\r\n            <p className=\"card-text\">\r\n              <small className=\"text-muted\">{recipe.ingredients}</small>\r\n            </p>\r\n            <button\r\n              className=\"btn btn-primary m-3\"\r\n              onClick={() => this.setState({ editStatus: true })}\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              className=\"btn btn-primary m-3\"\r\n              onClick={() => this.delete()}\r\n            >\r\n              Delete\r\n            </button>\r\n            {this.state.editStatus ? <p>Edit Form is Below</p> : <div></div>}\r\n          </div>\r\n        </div>\r\n        {this.state.editStatus ? (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <form onSubmit={(e) => e.preventDefault()} className=\"w-50\">\r\n              <div className=\"form-group\">\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"title\"\r\n                  className=\"form-control\"\r\n                  defaultValue={recipe.title}\r\n                  onChange={(txt) =>\r\n                    this.setState({ title: txt.target.value })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Ingredients</label>\r\n                <input\r\n                  name=\"ingredients\"\r\n                  className=\"form-control\"\r\n                  defaultValue={recipe.ingredients}\r\n                  onChange={(txt) =>\r\n                    this.setState({ ingredients: txt.target.value })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>recipe</label>\r\n                <input\r\n                  name=\"recipe\"\r\n                  className=\"form-control\"\r\n                  defaultValue={recipe.recipe}\r\n                  onChange={(txt) => this.setState({ rec: txt.target.value })}\r\n                />\r\n              </div>\r\n\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => this.onSubmit()}\r\n                className=\"btn btn-primary m-2\"\r\n              >\r\n                Submit\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => this.setState({ editStatus: false })}\r\n                className=\"btn btn-primary m-2\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </form>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OneRecipe;\r\n","import React, { Component } from 'react';\r\n\r\nclass NewRecipe extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      title: '',\r\n      ingredients: '',\r\n      recipe: '',\r\n      image: null,\r\n    };\r\n  }\r\n\r\n  //Handling onClick of submit button of add new recipe\r\n  onSubmit = () => {\r\n    let data = new FormData();\r\n    data.append('recipeImg', this.state.image);\r\n    data.append('title', this.state.title);\r\n    data.append('ingredients', this.state.ingredients);\r\n    data.append('recipe', this.state.recipe);\r\n    fetch('https://myrecipe-be.herokuapp.com/recipe/create', {\r\n      method: 'POST',\r\n      body: data,\r\n    })\r\n      .then((response) => response.json())\r\n      .then(() => this.props.routeChange('home'))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='d-flex justify-content-center'>\r\n        <form onSubmit={(e) => e.preventDefault()} className='w-50'>\r\n          <div className=\"form-group\">\r\n            <label>Title</label>\r\n            <input\r\n              name=\"title\"\r\n              className=\"form-control\"\r\n              onChange={(txt) => this.setState({ title: txt.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Ingredients</label>\r\n            <input className='w-50'\r\n              name=\"ingredients\"\r\n              className=\"form-control\"\r\n              onChange={(txt) =>\r\n                this.setState({ ingredients: txt.target.value })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>recipe</label>\r\n            <input\r\n              name=\"recipe\"\r\n              className=\"form-control\"\r\n              onChange={(txt) => this.setState({ recipe: txt.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Image</label>\r\n            <input\r\n              name=\"image\"\r\n              className=\"form-control\"\r\n              type=\"file\"\r\n              onChange={(event) =>\r\n                this.setState({ image: event.target.files[0] })\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => this.onSubmit()}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewRecipe;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Recipes from './components/recipes/recipes';\nimport OneRecipe from './components/oneRecipe/oneRecipe';\nimport NewRecipe from './components/newRecipe/NewRecipe'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      route: 'home',\n      handeledReipeId: null,\n    };\n  }\n  Routing = (route) => {\n    this.setState({ route: route });\n  };\n  handeldRecipe = (id) => {\n    this.setState({ handeledReipeId: id });\n  };\n\n  render() {\n    return (\n      <div className=\"App container bg-light\">\n        <div className=\"d-flex justify-content-between bg-primary\">\n          <h1 className='text-white'>My Recipes</h1>\n          <div>\n            <a className=\"btn btn-primary m-2\" onClick={()=>this.Routing('home')}>\n              Home\n            </a>\n            <a className=\"btn btn-primary m-2\" onClick={()=>this.Routing('new')}>\n              Add New Recipe\n            </a>\n          </div>\n        </div>\n        {this.state.route === 'one' ? (\n          <OneRecipe\n            routeChange={this.Routing}\n            id={this.state.handeledReipeId}\n          />\n        ) : this.state.route === 'home' ? (\n          <Recipes\n            routeChange={this.Routing}\n            handeldRecipe={this.handeldRecipe}\n          />\n        ) : this.state.route === 'new' ? (\n          <NewRecipe routeChange={this.Routing}/>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}